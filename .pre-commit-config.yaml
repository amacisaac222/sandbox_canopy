# Pre-commit configuration for CanopyIQ
# Run pre-commit install to set up the git hook locally
# Run pre-commit run --all-files to run on all files

repos:
  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]
        files: \.py$

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        files: \.py$

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [
          --max-line-length=88,
          --extend-ignore=E203,W503,E501,
          --exclude=alembic/versions/*,
          --per-file-ignores=__init__.py:F401
        ]
        files: \.py$

  # Remove trailing whitespace
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: debug-statements
      - id: check-docstring-first

  # Security linting with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, --skip=B101,B601,B602,B603,B604,B605,B606,B607]
        files: \.py$
        exclude: tests/.*

  # Python docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=numpy, --add-ignore=D100,D101,D102,D103,D104,D105,D107]
        files: \.py$
        exclude: tests/.*|alembic/.*

  # Type checking with mypy (optional - can be resource intensive)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        files: \.py$
        exclude: tests/.*|alembic/.*
        additional_dependencies: [
          types-requests,
          types-python-dateutil,
          types-PyYAML
        ]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(yaml|yml|json|md)$
        exclude: \.github/.*|helm/.*/templates/.*

  # Terraform formatting (if Terraform files are present)
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
        files: \.tf$
      - id: terraform_validate
        files: \.tf$
      - id: terraform_tflint
        files: \.tf$

  # Python dependencies security check
  - repo: https://github.com/PyCQA/safety
    rev: 2.3.5
    hooks:
      - id: safety
        args: [--json, --ignore=51668]  # Ignore specific non-critical vulnerabilities if needed

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Global exclude patterns
exclude: |
  (?x)^(
    \.git/.*|
    \.venv/.*|
    venv/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    node_modules/.*|
    \.mypy_cache/.*|
    alembic/versions/.*\.py$|
    static/.*|
    \.db$|
    \.sqlite$|
    \.sqlite3$
  )$

# Default language version
default_language_version:
  python: python3.11

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: 3.0.0